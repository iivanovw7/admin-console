// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Branch screen Should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <MemoryRouter>
      <WithStyles(withRouter(Connect(WithStyles(withRouter(Branch)))))
        branches={
          Object {
            "branch": Object {
              "__v": 0,
              "_id": "5c8f96b9cece9911f01dd092",
              "address": "938 Barby Way",
              "email": "mbrazier0@amazon.co.uk",
              "fax": "+86 829 425 7497",
              "information": "1",
              "name": "San Martín de los Andes",
              "phone": "+54 275 474 9318",
              "status": true,
            },
          }
        }
        dispatch={[MockFunction]}
      />
    </MemoryRouter>
  </Provider>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <MemoryRouter>
        <WithStyles(withRouter(Connect(WithStyles(withRouter(Branch)))))
          branches={
            Object {
              "branch": Object {
                "__v": 0,
                "_id": "5c8f96b9cece9911f01dd092",
                "address": "938 Barby Way",
                "email": "mbrazier0@amazon.co.uk",
                "fax": "+86 829 425 7497",
                "information": "1",
                "name": "San Martín de los Andes",
                "phone": "+54 275 474 9318",
                "status": true,
              },
            }
          }
          dispatch={[MockFunction]}
        />
      </MemoryRouter>,
      "value": Object {
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "storeState": Object {},
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <WithStyles(withRouter(Connect(WithStyles(withRouter(Branch)))))
          branches={
            Object {
              "branch": Object {
                "__v": 0,
                "_id": "5c8f96b9cece9911f01dd092",
                "address": "938 Barby Way",
                "email": "mbrazier0@amazon.co.uk",
                "fax": "+86 829 425 7497",
                "information": "1",
                "name": "San Martín de los Andes",
                "phone": "+54 275 474 9318",
                "status": true,
              },
            }
          }
          dispatch={[MockFunction]}
        />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "branches": Object {
            "branch": Object {
              "__v": 0,
              "_id": "5c8f96b9cece9911f01dd092",
              "address": "938 Barby Way",
              "email": "mbrazier0@amazon.co.uk",
              "fax": "+86 829 425 7497",
              "information": "1",
              "name": "San Martín de los Andes",
              "phone": "+54 275 474 9318",
              "status": true,
            },
          },
          "dispatch": [MockFunction],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
    "type": Object {
      "$$typeof": Symbol(react.provider),
      "_context": Object {
        "$$typeof": Symbol(react.context),
        "Consumer": Object {
          "$$typeof": Symbol(react.context),
          "_calculateChangedBits": null,
          "_context": [Circular],
        },
        "Provider": [Circular],
        "_calculateChangedBits": null,
        "_currentRenderer": null,
        "_currentRenderer2": null,
        "_currentValue": null,
        "_currentValue2": null,
        "_threadCount": 0,
      },
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <MemoryRouter>
          <WithStyles(withRouter(Connect(WithStyles(withRouter(Branch)))))
            branches={
              Object {
                "branch": Object {
                  "__v": 0,
                  "_id": "5c8f96b9cece9911f01dd092",
                  "address": "938 Barby Way",
                  "email": "mbrazier0@amazon.co.uk",
                  "fax": "+86 829 425 7497",
                  "information": "1",
                  "name": "San Martín de los Andes",
                  "phone": "+54 275 474 9318",
                  "status": true,
                },
              }
            }
            dispatch={[MockFunction]}
          />
        </MemoryRouter>,
        "value": Object {
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "storeState": Object {},
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <WithStyles(withRouter(Connect(WithStyles(withRouter(Branch)))))
            branches={
              Object {
                "branch": Object {
                  "__v": 0,
                  "_id": "5c8f96b9cece9911f01dd092",
                  "address": "938 Barby Way",
                  "email": "mbrazier0@amazon.co.uk",
                  "fax": "+86 829 425 7497",
                  "information": "1",
                  "name": "San Martín de los Andes",
                  "phone": "+54 275 474 9318",
                  "status": true,
                },
              }
            }
            dispatch={[MockFunction]}
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "branches": Object {
              "branch": Object {
                "__v": 0,
                "_id": "5c8f96b9cece9911f01dd092",
                "address": "938 Barby Way",
                "email": "mbrazier0@amazon.co.uk",
                "fax": "+86 829 425 7497",
                "information": "1",
                "name": "San Martín de los Andes",
                "phone": "+54 275 474 9318",
                "status": true,
              },
            },
            "dispatch": [MockFunction],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      "type": Object {
        "$$typeof": Symbol(react.provider),
        "_context": Object {
          "$$typeof": Symbol(react.context),
          "Consumer": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": [Circular],
          },
          "Provider": [Circular],
          "_calculateChangedBits": null,
          "_currentRenderer": null,
          "_currentRenderer2": null,
          "_currentValue": null,
          "_currentValue2": null,
          "_threadCount": 0,
        },
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "context": Object {},
  },
  Symbol(enzyme.__childContext__): null,
}
`;
